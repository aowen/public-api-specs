openapi: 3.0.0
info:
  version: 1.0.0
  title: Scoir's Public API
  description: Scoir's way of integrating with external system to keep student records up-to-date.
servers:
  - url: app.scoir.io/public/dev/api
    description: Dev server (Still TBD)
  - url: app.scoir.io/public/api
    description: Production server (Still TBD)
security: 
  # this is TBD
  - AuthToken: []
tags:
  - name: applications
paths:
  #allow college to send application status changes to Scoir
  /students/applications/status:
    post:
      tags:
        - applications
      requestBody:
        description: Record college application details for Scoir students. 
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                scoirApplications:
                  type: array
                  items:
                    $ref: "#/components/schemas/scoir_application_status"
                otherApplications:
                  type: array
                  items:
                    $ref: "#/components/schemas/other_application_status"
      responses:
        "200":
          description: All application updates recorded.
          content:
            application/json:
              examples:
                response:
                  value: '"OK"'
        "401":
          $ref: "#/components/responses/401"
        "403":
          $ref: "#/components/responses/403"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"
  
 
components:
  responses:
    "401":
      description: Unauthorized.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/genericError"
          examples:
            response:
              value: |-
                {
                  "message": "We don't know who you are."
                }
    "403":
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/genericError"
          examples:
            response:
              value: |-
                {
                  "message": "Forbidden to access this resource."
                }
    "404":
      description: Item not found.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/itemNotFoundError"
          examples:
            response:
              value: |-
               {
                  "itemsNotFound": [
                    {
                      "name": "scoirStudentId",
                      "value": "12345",
                      "message": "can't match Id."
                    }
                  ]
                }
    "500":
      description: Unexpected error.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/genericError"
          examples:
            response:
              value: |-
                {
                  "message": "Error details"
                }
  securitySchemes:
    # if we go the service account route: https://cloud.google.com/endpoints/docs/openapi/service-account-authentication
    AuthToken:
      type: apiKey
      in: header
      name: apikey
  schemas:
    scoir_application_status:
      type: object
      description: "Details about an application originating from Scoir."
      required:
        - scoirApplicationId
        - applicationCompletionStatus
        - applicationCompletionStatusText
      properties:
        scoirApplicationId:
          type: string
          description: "Unique identifier assigned to a college application initiated on Scoir."
        externalSSOId:
          type: string
          description: "Unique identifier assigned by the Application Platform that allows user to SSO into the Application Platform."
        applicationCompletionStatus:
          type: string
          description: "A standard representation of the applications status in the Application Platform."
        applicationCompletionStatusText:
          type: string
          description: "Human-readable description of application completion status."
        applicationDecision:
          type: string
          description: "The college's decision on an application (i.e. waitlisted, accepted, etc.)"
    
    other_application_status:
      type: object
      description: "Details about an application not originating from Scoir."
      required:
        - scoirStudentId
        - externalApplicationId
        - collegeId
        - applicationCompletionStatus
      properties:
        scoirStudentId:
          type: string
          description: "Unique identifier assigned to a student on Scoir."
        externalApplicationId:
          type: string
          description: "Unique identifier assigned by the Application Platform to a college application that was not initiated on Scoir."
        externalSSOId:
          type: string
          description: "Unique identifier assigned by the Application Platform that allows user to SSO into the Application Platform."
        collegeId:
          type: string
          description: "Unique identifer assigned to the college, shared between Scoir and Application Platform."
        applicationCompletionStatus:
          type: string
          description: "Application completion status."
        applicationCompletionStatusText:
          type: string
          description: "A standard representation of the applications status in the Application Platform."
        applicationDeadline:
          type: string
          description: "The deadline within which the application was submitted."
        applicationSource:
          type: string
          description: "The name of the system that sent the application to the Application Platform."
        applicationDecision:
          type: string
          description: "The college's decision on an application (i.e. waitlisted, accepted, etc.)"
          
    #Error Messages
    genericError:
      properties:
        message:
          type: string
          
    itemNotFoundError:
      properties:
        itemsNotFound:
          type: array
          items:
              type: object
              properties:
                name:
                  type: string
                value:
                  type: string
        information:
          type: string